"""
Account
"""
type Account {
  createdAt: ISO8601DateTime!
  data: String!
  devices: [Device!]!
  id: ID!
  pendingRequests: [Request!]!
  truentityId: String!
  updatedAt: ISO8601DateTime!
  user: User!
}

"""
Autogenerated return type of AccountLogin
"""
type AccountLoginPayload {
  accessToken: String!
  account: Account!
  refreshToken: String!
}

"""
Autogenerated return type of AccountSignup
"""
type AccountSignupPayload {
  accessToken: String!
  account: Account!
  refreshToken: String!
}

"""
Device
"""
type Device {
  client: String!
  clientVersion: String!
  createdAt: ISO8601DateTime!
  expiresAt: NonNegativeInt!
  id: ID!
  ip: String
  lastIssued: String!
  lastIssuedAt: ISO8601DateTime!
  updatedAt: ISO8601DateTime!
  user: User!
  userAgent: String!
}

"""
A properly formatted email address
"""
scalar Email

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

enum LocaleEnum {
  US_ENGLISH
}

"""
The mutation root of this schema
"""
type Mutation {
  """
  Obtain access tokens with account credentials
  """
  accountLogin(email: Email!, fcmToken: String!, password: String!): AccountLoginPayload

  """
  Sign up a new account
  """
  accountSignup(email: Email!, fcmToken: String, firstName: String!, lastName: String!, password: String!): AccountSignupPayload
}

"""
An Int with a value >= 0
"""
scalar NonNegativeInt

"""
The query root of this schema
"""
type Query {
  """
  Get current account
  """
  currentAccount: Account!
}

"""
User
"""
type User {
  createdAt: ISO8601DateTime!
  devices: [Device!]!
  email: Email!
  firstName: String
  id: ID!
  lastName: String
  locale: LocaleEnum!
  passwordStale: Boolean
  updatedAt: ISO8601DateTime!
}
